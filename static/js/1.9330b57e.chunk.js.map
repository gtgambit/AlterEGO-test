{"version":3,"file":"static/js/1.9330b57e.chunk.js","mappings":"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","sources":["pages/LoginPage/schema.ts","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import * as yup from \"yup\";\r\n\r\nexport const validationSchema = yup.object({\r\n  username: yup\r\n    .string()\r\n    .required(\"Username is required\")\r\n    .min(5, \"Username must be at least 5 characters long\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(5, \"Password must be at least 5 characters long\"),\r\n});\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Grid, Paper, TextField, Button, Typography } from \"@mui/material\";\r\nimport { validationSchema } from \"./schema\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Box } from \"@mui/system\";\r\nimport { authUser } from \"../../redux/Auth/authSlice\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ninterface IFormInputs {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport const LoginPage = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<IFormInputs>({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const [loginError, setLoginError] = useState(false);\r\n\r\n  const handleLogin = (data: IFormInputs) => {\r\n    if (data.username === \"admin\" && data.password === \"12345\") {\r\n      dispatch(authUser({ username: data.username, password: data.password }));\r\n      navigate(\"/profile\");\r\n    } else {\r\n      setLoginError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\r\n      <Grid\r\n        item\r\n        xs={false}\r\n        sm={4}\r\n        md={7}\r\n        sx={{\r\n          backgroundImage:\r\n            \"url(https://images.unsplash.com/photo-1675777464785-9422fe5987d2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxfDB8MXxyYW5kb218MHx8fHx8fHx8MTY3NzI1MjM1NA&ixlib=rb-4.0.3&q=80&w=1080)\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundColor: (t) =>\r\n            t.palette.mode === \"light\"\r\n              ? t.palette.grey[50]\r\n              : t.palette.grey[900],\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n        }}\r\n      />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={8}\r\n        md={5}\r\n        component={Paper}\r\n        elevation={6}\r\n        square\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}>\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ mt: 3 }}>\r\n          {t(\"auth.userLogin\")}\r\n        </Typography>\r\n        <Box\r\n          component=\"form\"\r\n          onSubmit={handleSubmit(handleLogin)}\r\n          noValidate\r\n          sx={{ mt: 1 }}>\r\n          <Controller\r\n            name=\"username\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field }) => (\r\n              <TextField\r\n                {...field}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"username\"\r\n                label={t(\"auth.username\")}\r\n                error={Boolean(errors.username)}\r\n                helperText={errors.username?.message}\r\n                autoFocus\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\":\r\n                    { borderColor: \"secondary.main\" },\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"password\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field }) => (\r\n              <TextField\r\n                {...field}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"password\"\r\n                label={t(\"auth.password\")}\r\n                type=\"password\"\r\n                error={Boolean(errors.password)}\r\n                helperText={errors.password?.message}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\":\r\n                    { borderColor: \"secondary.main\" },\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          {loginError && (\r\n            <Typography variant=\"body2\" color=\"error\" sx={{ mt: 1 }}>\r\n              {t(\"errors.incorrectCredentials\")}\r\n            </Typography>\r\n          )}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3 }}\r\n            color=\"primary\">\r\n            {t(\"auth.login\")}\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n"],"names":["validationSchema","yup","username","required","min","password","LoginPage","dispatch","useDispatch","navigate","useNavigate","t","useTranslation","useForm","resolver","yupResolver","control","handleSubmit","errors","formState","useState","loginError","setLoginError","Grid","container","component","sx","height","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","display","flexDirection","alignItems","justifyContent","Typography","variant","mt","Box","onSubmit","data","authUser","noValidate","name","defaultValue","render","field","TextField","margin","fullWidth","id","label","error","Boolean","helperText","message","autoFocus","borderColor","type","color","Button"],"sourceRoot":""}